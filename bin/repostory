#!/bin/bash

#Dependency check

	DEPENDENCIES="zenity curl"
	for dep in $DEPENDENCIES
	do
		which $dep &> /dev/null
		if [ $? -ne '0' ]
		then
			echo "[ERR]: $dep Not Found in your path."
			exit
		fi
	done

#Cleans last usage

	OLD_FILES="repostory"
	for old in $OLD_FILES
	do
		if [ -f /tmp/$old ]; 
		then
			rm /tmp/$old
		fi
	done

#Lists release, repos

	myrelease=$(grep 'DISTRIB_CODENAME' /etc/lsb-release | sed 's/DISTRIB_CODENAME=//' | head -1)
	#myrelease="maverick"
	repo_clean=$(ls /etc/apt/sources.list.d/ | grep -v .save)
	repo_list=$(cd /etc/apt/sources.list.d && cat $repo_clean /etc/apt/sources.list | grep deb\ http.* | sed -e 's/.*help\.ubuntu\.com.*//' -e 's/^#.*//' -e 's/deb\ //' -e 's/deb-src\ //' -e '/^$/d' | sort -u | awk '{print $1"|"$2}' | sed -e 's/\/|/|/' -e 's/-[a-z]*$//' | uniq && cd)
	#repo_list=$(cat dummy.sources.list | grep deb\ http.* | sed -e 's/.*help\.ubuntu\.com.*//' -e 's/^#.*//' -e 's/deb\ //' -e 's/deb-src\ //' -e '/^$/d' | sort -u | awk '{print $1"|"$2}' | sed -e 's/\/|/|/' -e 's/-[a-z]*$//' | uniq && cd)
	count_repos=$(echo $repo_list | wc -w)
	check_progress=$count_repos
	release_1="utopic"
	release_2="trusty"
	release_3="raring"
	release_4="precise"

#Checks
	
	{
	for repo_0 in $repo_list
	        do

		repo="$(echo $repo_0 | sed 's/|.*//')"
		rir="$(echo $repo_0 | sed 's/.*|//')"


	        rir_list=$(curl --silent $repo/dists/ | grep -oi href\=\"[^\/].*/\" | sed -e 's/href\=\"//i' -e 's/\/\"//' -e 's/-.*//' -e 's/\ NAME.*//i' | sort -u | uniq)
		if [ '$rir_list' = '' ]
		then
			rir_list=$(curl --silent $repo/ | grep -oi href\=\"[^\/].*\" | sed -e 's/href\=\"//i' -e 's/\/\"//' -e 's/-.*//' -e 's/\ NAME.*//i' -e 's/\/index\.html\"//' -e 's/.*".*//' -e 's/http.*//' | sort -u | uniq)
		fi

		#(I guess one will find something more elegant here)


		if [ $(echo "$rir_list" | grep -o $myrelease) ]
	        then    
	                echo "$myrelease " >> /tmp/repostory
	        fi
		if [ '$rir_list' = '' ]
		then 
			echo "$myrelease " >> /tmp/repostory
		fi
	        if [ $(echo "$rir_list" | grep -oi $release_1) ]
	        then    
	                r1="yes"
	                else
	                r1="no"
	        fi
	        if [ $(echo "$rir_list" | grep -oi $release_2) ]
	        then    
	                r2="yes"
	                else
	                r2="no"
	        fi
	        if [ $(echo "$rir_list" | grep -oi $release_3) ]
	        then    
	                r3="yes"
	                else
	                r3="no"
	        fi
	        if [ $(echo "$rir_list" | grep -oi $release_4) ]
		then    
	                r4="yes"
	        	else
	                r4="no"
	        fi	        
	
		#results
   		
		if [ "$rir" = "$release_1" ]
		then
			results="$repo [$r1] $r2 $r3 $r4"
		elif [ "$rir" = "$release_2" ]
		then
			results="$repo $r1 [$r2] $r3 $r4"
		elif [ "$rir" = "$release_3" ]
		then
			results="$repo $r1 $r2 [$r3] $r4"
		elif [ "$rir" = "$release_4" ]
		then
			results="$repo $r1 $r2 $r3 [$r4]"
		else
			echo "$myrelease " >> /tmp/repostory
			results="$repo - - - -"
		fi

		#finds status and stores results
		status="-"
 		if [ $(echo "$results" | grep -o "\[no\]" | uniq) ]
	        then    
	                status="Error"
		fi
	        if [ $(echo "$results" | grep -o "\[yes\]" | uniq) ]
		then
	                status="Ok"
		fi
		
		
		#TODO should be $status $repo $r1 $r2 $r3 $r4
		echo "$status $results" >> /tmp/repostory

						
		
	        	
		#Zenity progressbar

        	percent=$((100-$check_progress*100/$count_repos))
        	check_progress=$(($check_progress-1))
        	echo $percent

		done		
	} | zenity --progress --percentage=0 --title="Repostory" --text="Scanning repositories..." --auto-close
#Displays nicely

	if [ "$(cat /tmp/repostory | grep -c $myrelease)" = "$count_repos" ]
	then
		zeni_text="All the repositories you use support the $myrelease release."
	elif [ "$(cat /tmp/repostory | grep -c $myrelease)" = "1" ]
	then 
		zeni_text="Only $(cat /tmp/repostory | grep -c $myrelease) of your $count_repos activated repositories supports the $myrelease release."
	else
		zeni_text="$(($count_repos - $(cat /tmp/repostory | grep -c $myrelease))) of your $count_repos activated repositories don't support the $myrelease release."
	fi
	
	
	if [ "$((100+$count_repos*25))" -gt "600" ]
	then
		window_height="600"
	else
		window_height="$((100+$count_repos*22))"
	fi		

	zenity --title "Repostory" --text "$zeni_text" --width 1000 --height $window_height --list --column "Status" --column "Repository" --column "$release_1" --column "$release_2" --column "$release_3" --column "$release_4" $(cat /tmp/repostory | sed s/$myrelease//)
	
